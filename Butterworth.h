/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef BUTTERWORTH_H
#define BUTTERWORTH_H

#include <TComplex.h>

#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooRealVar.h"
#include "RooAbsCategory.h"


class Butterworth : public RooAbsReal
{
    public:
        Butterworth() {} ; 
        Butterworth( const char *name, const char *title,
	                 RooAbsReal& _t,
	                 RooAbsReal& _omegaC,
                     UInt_t _n );

        Butterworth( const Butterworth& other, const char* name = 0 );

        virtual TObject* clone( const char* newname ) const { return new Butterworth( *this, newname ); }
        inline virtual ~Butterworth() { }



    protected:
        RooRealProxy t ;
        RooRealProxy omegaC ;

        UInt_t n; 

        //Auxiliary functions
        TComplex Sk( UInt_t k ) const;
        TComplex J( UInt_t k ) const;
        TComplex H( Double_t x ) const;

        Double_t evaluate() const ;


    private:
        ClassDef( Butterworth, 1) // Butterworth filter transfer function in t-domain 
};
 
#endif
